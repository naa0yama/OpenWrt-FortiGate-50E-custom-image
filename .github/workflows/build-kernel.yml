name: Build Kernel

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        default: "23.05.2"
        description: OpenWrt version
        type: string

      make_options:
        required: true
        default: "V=c"
        description: |
          make options. (default: "V=c")

          [s]: stdout+stderr, [c]: commands, [w]: warnings/errors only
        type: choice
        options:
        - "V=c"
        - "V=w"
        - "V=sc"
        - "V=sw"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        platform:
          - "fortinet_fg-50e"
    timeout-minutes: 180 # default 6 hour
    env:
      TZ: Asia/Tokyo
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4.1.1

      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

      - name: Confirm git commit SHA output
        run: echo ${{ env.COMMIT_SHORT_SHA }}

      - name: Installing dependencies
        run: |
          sudo apt update
          sudo apt install build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev \
          python3-distutils rsync unzip zlib1g-dev file wget

      - name: git clone openwrt/openwrt
        run: |
          set -eux

          git clone https://git.openwrt.org/openwrt/openwrt.git
          cd openwrt
          git pull

      - name: configure code version
        working-directory: openwrt
        run: |
          set -eux

          git branch -a
          git tag
          git checkout v${{ inputs.version }}

      - name: cache before ls -lah
        run: |
          set -eux

          pwd
          ls -lah
          ls -lah openwrt

      - name: Cache dependencies
        id: cache-build
        uses: actions/cache@v4.0.0
        with:
          path: |
            ./openwrt/build_dir/host
            ./openwrt/dl/
            ./openwrt/staging_dir/host

          key: built-${{ inputs.version }}-${{ matrix.platform }}-

      - name: cache after ls -lah
        run: |
          set -eux

          pwd
          ls -lah
          ls -lah openwrt

      - name: Cache hit check
        run: |
          echo "-->${{steps.cache-build.outputs.cache-hit}}<--"

      - name: Update the feeds
        working-directory: openwrt
        run: |
          set -eux

          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Expand to full config
        working-directory: openwrt
        run: |
          set -eux

          cp ../config/mvebu-cortexa9-fortinet_fg-50e.ini .config
          make defconfig

      - name: Building firmware
        working-directory: openwrt
        run: |
          set -eux

          cd .
          time make --directory ./ -j $(($(nproc)+1)) ${{ inputs.make_options }} download
          time make --directory ./ -j $(($(nproc)+1)) ${{ inputs.make_options }} world

      - name: Archive artifacts
        working-directory: openwrt/bin/targets/mvebu/cortexa9
        run: |
          set -eux

          tar -zcvf openwrt-${{ inputs.version }}-${{ env.COMMIT_SHORT_SHA }}-mvebu-cortexa9-fortinet_fg-50e.tar.gz ./*

      - name: Pre-Release
        uses: softprops/action-gh-release@v1
        with:
          name: OpenWrt Custom ${{ inputs.version }}-${{ env.COMMIT_SHORT_SHA }}
          tag_name: ${{ inputs.version }}-${{ env.COMMIT_SHORT_SHA }}
          body: |
            * OpenWrt ${{ inputs.version }}
            * My repo Commit hash: `${{ env.COMMIT_SHORT_SHA }}`

            This firmware was built by @naa0yama

          draft: true
          prerelease: true
          files: |
            ./openwrt/bin/targets/mvebu/cortexa9/openwrt-${{ inputs.version }}-${{ env.COMMIT_SHORT_SHA }}-mvebu-cortexa9-fortinet_fg-50e.tar.gz
