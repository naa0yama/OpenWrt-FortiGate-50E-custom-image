name: Build ImageBuilder
# Ref: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

on:
  workflow_call:
    inputs:
      run-id:
        required: true
        default: ""
        description: Blank is latest run-id.
        type: string

  workflow_dispatch: {}

jobs:
  ImageBuilder:
    runs-on: ubuntu-latest
    timeout-minutes: 180 # default 6 hour
    env:
      TZ: Asia/Tokyo
      BUILD_OPENWRT_VERSION: null
      COMMIT_SHORT_SHA: null
      LOCAL_BRANCH_NAME: null
      LOCAL_RUN_ID: null
    permissions:
      actions: read
      contents: write

    steps:
      - name: Checkout from repository
        uses: actions/checkout@v4.1.1

      - name: Set short git commit SHA
        run: |+
          set -eux

          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

      - name: Extract branch name
        run: |+
          set -eux

          echo "LOCAL_BRANCH_NAME=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV

      - name: Confirm git commit SHA output
        run: echo ${{ env.COMMIT_SHORT_SHA }}

      - name: Get last kernel-build runs
        uses: actions/github-script@v7.0.1
        if: inputs.run-id == '""'
        id: LastKernelBuild
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |+
            const listWorkflowRuns = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '_protect-branch.yml',
              branch: '${{ env.LOCAL_BRANCH_NAME }}',
              status: 'success',
              per_page: 1,
            });

            return listWorkflowRuns.data.workflow_runs[0]

      - name: "Check outputs eq \"\""
        if: inputs.run-id == '""'
        run: |+
          set -eux

          echo "LOCAL_RUN_ID=${{ fromJson(steps.LastKernelBuild.outputs.result).id }}" >> $GITHUB_ENV

      - name: "Check outputs ne \"\""
        if: inputs.run-id != '""'
        run: |+
          set -eux

          echo "LOCAL_RUN_ID=${{ inputs.run-id }}" >> $GITHUB_ENV

      - name: Download buildimage artifact
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ env.LOCAL_RUN_ID }}
          pattern: openwrt-imagebuilder-*
          github-token: ${{ secrets.GITHUB_TOKEN }}
          merge-multiple: true

      - name: Display structure of downloaded files
        run: |+
          set -eux

          ls -R

      - name: Installing dependencies
        run: |+
          set -eux

          sudo apt update
          sudo apt install --no-install-recommends --no-install-suggests --yes \
          build-essential libncurses-dev zlib1g-dev gawk \
          gettext libssl-dev xsltproc rsync wget  unzip python3 python3-distutils

      - name: Unpack the archive
        run: |+
          set -eux

          mkdir -p imagebuilder
          tar -Jxf ./targets/mvebu/cortexa9/openwrt-imagebuilder-*.tar.xz --strip-components 1 -C ./imagebuilder

          cp -av ./targets/mvebu/cortexa9/packages ./imagebuilder/packages

      - name: Patches Packages
        run: |+
          set -eux

          cp -av ./packages/arm_cortex-a9_vfpv3-d16/base/      ./imagebuilder/packages
          cp -av ./packages/arm_cortex-a9_vfpv3-d16/luci/      ./imagebuilder/packages
          cp -av ./packages/arm_cortex-a9_vfpv3-d16/packages/  ./imagebuilder/packages
          cp -av ./packages/arm_cortex-a9_vfpv3-d16/routing/   ./imagebuilder/packages
          cp -av ./packages/arm_cortex-a9_vfpv3-d16/telephony/ ./imagebuilder/packages

      - name: Set OpenWrt version
        working-directory: imagebuilder/bin/targets/mvebu/cortexa9
        run: |+
          set -eux
          echo "BUILD_OPENWRT_VERSION=$(cat ./version.tag) ($(cat ./version.buildinfo))" >> $GITHUB_ENV
          echo "BUILD_OPENWRT_TAG=$(cat ./version.tag)" >> $GITHUB_ENV

      - name: Building image
        working-directory: imagebuilder
        run: |+
          set -eux

          make image \
            PROFILE="fortinet_fg-50e" \
            DISABLED_SERVICES="$(grep -v -E '^(#|$)' ${{ github.workspace }}/config/imagebuilder/disable_services.txt | tr '\n' ' ')" \
            PACKAGES="$(grep -v -E '^(#|$)' ${{ github.workspace }}/config/imagebuilder/packages_list.txt | tr '\n' ' ')" \
            FILES="${{ github.workspace }}/config/imagebuilder/files"

          ls -lah ./bin/targets/mvebu/cortexa9

          mv -v ./bin/targets/mvebu/cortexa9/openwrt-${BUILD_OPENWRT_TAG#v}-mvebu-cortexa9-fortinet_fg-50e-squashfs-sysupgrade.bin \
            ./bin/targets/mvebu/cortexa9/openwrt-${BUILD_OPENWRT_TAG#v}-${COMMIT_SHORT_SHA}-mvebu-cortexa9-fortinet_fg-50e-squashfs-sysupgrade.bin

      - name: Generate Release note
        working-directory: imagebuilder
        run: |+
          set -eux

          cat <<EOF> ${{ github.workspace }}-ReleaseNote.txt
          * OpenWrt ${{ env.BUILD_OPENWRT_VERSION }}
          * My repo Commit hash: ${{ github.sha }}

          This firmware was built by @naa0yama

          ## sha256sums

          \`\`\`bash
          $( cat ./bin/targets/mvebu/cortexa9/sha256sums | grep -v -e '\*packages\/' )

          \`\`\`

          ## config

          \`\`\`bash
          # DISABLED_SERVICES
          $( cat ../config/imagebuilder/disable_services.txt )

          # PACKAGES
          $( cat ../config/imagebuilder/packages_list.txt )

          # FILES
          $( grep -r -E '*' ../config/imagebuilder/files | sed -e 's@\.\./config/imagebuilder/files@@g' )

          \`\`\`


          ## Packages

          <details>
            <summary>Packages files</summary>

          \`\`\`bash
          $( ls -lah ./packages/* )

          \`\`\`

          </details>

          EOF

      - name: Cleanup pre-releases
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |+
            const __prereleases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100,
            });
            const prereleases = __prereleases.data

            for (const index in prereleases) {
              if (prereleases[index].draft == true &&
                  prereleases[index].prerelease == true ) {
                console.log('delte pre-release ' + prereleases[index]['id'] + '\t' + prereleases[index]['name'])

                await github.rest.repos.deleteRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: prereleases[index]['id'],
                });
              }
            }

            console.log('end run')

      - name: Pre-Release
        uses: softprops/action-gh-release@v2
        with:
          name: OpenWrt Custom ${{ env.BUILD_OPENWRT_VERSION }}-${{ env.COMMIT_SHORT_SHA }}
          tag_name: ${{ env.BUILD_OPENWRT_VERSION }}-${{ env.COMMIT_SHORT_SHA }}
          body_path: ${{ github.workspace }}-ReleaseNote.txt
          draft: true
          prerelease: true
          files: |
            ./openwrt-*mvebu-cortexa9-fortinet_fg-50e-initramfs-kernel.bin
            ./imagebuilder/bin/targets/mvebu/cortexa9/openwrt-*mvebu-cortexa9-fortinet_fg-50e-squashfs-sysupgrade.bin
