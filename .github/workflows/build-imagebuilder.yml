name: Build ImageBuilder
# Ref: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

on:
  schedule:
    # https://crontab.guru
    # Cache 切れ回避
    - cron: "0 02 * * 1,4" # daily 11:00 +0900 月,木

  push:
    paths:
      - .github/workflows/build-imagebuilder.yml
      - config/imagebuilder/disable_services.txt
      - config/imagebuilder/files.txt
      - config/imagebuilder/packages_list.txt

  pull_request:
    types:
      - opened
      - synchronize
      - closed

  workflow_dispatch:
    inputs:
      version:
        required: true
        default: "v23.05.2"
        description: OpenWrt version
        type: string

      make_options:
        required: true
        default: "V=c"
        description: |
          make options. (default: "V=c")

          [s]: stdout+stderr, [c]: commands, [w]: warnings/errors only
        type: choice
        options:
          - "V=c"
          - "V=w"
          - "V=sc"
          - "V=sw"

jobs:
  ImageBuilder:
    runs-on: ubuntu-latest
    timeout-minutes: 180 # default 6 hour
    env:
      TZ: Asia/Tokyo
      COMMIT_SHORT_SHA: null
    permissions:
      actions: read
      contents: write

    steps:
      - name: Checkout from repository
        uses: actions/checkout@v4.1.1

      - name: Set short git commit SHA
        id: vars
        run: |+
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

      - name: Confirm git commit SHA output
        run: echo ${{ env.COMMIT_SHORT_SHA }}

      - uses: actions/github-script@v7.0.1
        id: LastKernelBuild
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |+
            const listWorkflowRuns = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'build-kernel.yml',
              branch: 'main',
              status: 'success',
              per_page: 1,
            });

            return listWorkflowRuns.data.workflow_runs[0]

      - name: "Check outputs"
        run: |+
          set -eux

          echo ${{ toJson(steps.LastKernelBuild.outputs.result) }}

      - name: Download buildimage artifact
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ fromJson(steps.LastKernelBuild.outputs.result).id }}
          pattern: openwrt-imagebuilder-*
          github-token: ${{ secrets.GITHUB_TOKEN }}
          merge-multiple: true

      - name: Display structure of downloaded files
        run: |+
          set -eux

          ls -R

      - name: Installing dependencies
        run: |+
          set -eux

          sudo apt update
          sudo apt install --no-install-recommends --no-install-suggests --yes \
          build-essential libncurses-dev zlib1g-dev gawk \
          gettext libssl-dev xsltproc rsync wget  unzip python3 python3-distutils

      - name: Unpack the archive
        run: |+
          set -eux

          mkdir -p imagebuilder
          tar -Jxf openwrt-imagebuilder-*.tar.xz --strip-components 1 -C ./imagebuilder

      - name: Building image
        working-directory: imagebuilder
        run: |+
          set -eux

          make image \
            PROFILE=\"fortinet_fg-50e\" \
            DISABLED_SERVICES=\"$(cat ../config/imagebuilder/disable_services.txt | tr '\n' ' ')\" \
            PACKAGES=\"$(cat ../config/imagebuilder/packages_list.txt | tr '\n' ' ')\" \
            FILES=\"$(cat ../config/imagebuilder/files.txt | tr '\n' ' ')\"

          ls -lah ./bin/targets/mvebu/cortexa9
